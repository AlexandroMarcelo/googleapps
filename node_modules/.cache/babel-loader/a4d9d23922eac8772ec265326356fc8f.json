{"ast":null,"code":"var _jsxFileName = \"/Users/alexmarcelo/Desktop/proyecto/src/views/TopBy.js\";\nimport React, { useState, useEffect } from 'react';\nimport Chart from '../components/chart-example';\nimport Grid from '@material-ui/core/Grid';\nimport Navbar from '../components/NavBar'; //CARD\n\nimport DescriptionCard from '../components/DescriptionCard';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport API from \"../utils/API\";\nimport LoadingScreen from './LoadingScreen';\nimport data_info from '../api';\n\nfunction TopBy(props) {\n  const [datas, setData] = useState({});\n  const [cards_data, setCardsData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [info, setInfo] = useState({});\n  useEffect(() => {\n    //console.log(props.match.params.type)\n    setInfo(data_info[props.match.params.type]);\n    API.get(props.match.params.type).then(jsonres => {\n      console.log(jsonres.data['0']);\n      setCardsData(jsonres.data['1']);\n      setData(jsonres.data['0']);\n      setLoading(false);\n    }).catch(err => {\n      console.log(\"ERROR\", err);\n      setLoading(false);\n      setError(true);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, !error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      padding: '0 2em'\n    },\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: datas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 45\n    }\n  }))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Hubo un error con la petici\\xF3n\")) : /*#__PURE__*/React.createElement(LoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }\n  }));\n}\n\nexport default TopBy;","map":{"version":3,"sources":["/Users/alexmarcelo/Desktop/proyecto/src/views/TopBy.js"],"names":["React","useState","useEffect","Chart","Grid","Navbar","DescriptionCard","Card","CardActionArea","CardContent","API","LoadingScreen","data_info","TopBy","props","datas","setData","cards_data","setCardsData","loading","setLoading","error","setError","info","setInfo","match","params","type","get","then","jsonres","console","log","data","catch","err","padding","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,QAAtB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAEjB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBf,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACgB,UAAD,EAAaC,YAAb,IAA6BjB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAiBvB,QAAQ,CAAC,EAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAsB,IAAAA,OAAO,CAACZ,SAAS,CAACE,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,IAApB,CAAV,CAAP;AACAjB,IAAAA,GAAG,CAACkB,GAAJ,CAAQd,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,IAA3B,EACCE,IADD,CACOC,OAAD,IAAW;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAZ;AACAf,MAAAA,YAAY,CAACY,OAAO,CAACG,IAAR,CAAa,GAAb,CAAD,CAAZ;AACAjB,MAAAA,OAAO,CAACc,OAAO,CAACG,IAAR,CAAa,GAAb,CAAD,CAAP;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAND,EAOCc,KAPD,CAOQC,GAAD,IAAS;AAEdJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBG,GAApB;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAZD;AAeH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACH,OAAD,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACE,KAAD,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACe,MAAAA,OAAO,EAAE;AAAV,KAAb;AAAiC,IAAA,IAAI,MAArC;AAAsC,IAAA,EAAE,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,CADJ,CAFJ,CADC,gBAgBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAjBJ,CADH,gBAoBA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBL,CADJ;AAyBH;;AAED,eAAeF,KAAf","sourcesContent":["import React,{ useState, useEffect }  from 'react';\nimport Chart from '../components/chart-example';\nimport Grid from '@material-ui/core/Grid';\nimport Navbar from '../components/NavBar';\n\n//CARD\nimport DescriptionCard from '../components/DescriptionCard';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport API from \"../utils/API\";\nimport LoadingScreen from './LoadingScreen';\nimport data_info from '../api';\n\nfunction TopBy(props){\n\n    const [datas, setData] = useState({});\n    const [cards_data, setCardsData] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [info, setInfo]= useState({});\n\n    useEffect(() => {\n        //console.log(props.match.params.type)\n        setInfo(data_info[props.match.params.type]);\n        API.get(props.match.params.type)\n        .then((jsonres)=>{\n          console.log(jsonres.data['0'])\n          setCardsData(jsonres.data['1'])\n          setData(jsonres.data['0']);\n          setLoading(false);\n        })\n        .catch((err) => {\n            \n          console.log(\"ERROR\",err);\n          setLoading(false);\n          setError(true);\n        })\n        \n        \n    }, []);\n\n    return(\n        <div>\n            {!loading?\n                <div>\n                    {!error?\n                    <div>\n                        <Navbar/>\n                        <Grid container>\n                            <Grid style={{padding: '0 2em'}} item xs={6}>\n                                <Card style={{display: 'flex'}}>\n                                    <CardActionArea>\n                                        <CardContent>\n                                            <Chart data={datas}/>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    :\n                    <div>Hubo un error con la petici&oacute;n</div>}\n                </div>\n            :<LoadingScreen/>}\n        </div>\n    );\n}\n\nexport default TopBy;"]},"metadata":{},"sourceType":"module"}